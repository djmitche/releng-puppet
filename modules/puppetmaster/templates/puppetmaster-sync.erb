#! /bin/bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

distinguished_master=<%= scope.lookupvar('puppetmaster::settings::distinguished_master') %>
data_root=<%= scope.lookupvar('puppetmaster::settings::data_root') %>
mailto=<%= scope.lookupvar('::config::puppet_notif_email') %>
hostname=<%= scope.lookupvar('::fqdn') %>
puppetsync_key="<%= scope.lookupvar('puppetmaster::settings::puppetsync_home') %>/.ssh/puppetsync_rsa"

# make logfile that puppetsync can write to
logfile=$(mktemp)

# set the default subject line for our output email
subject="[PuppetAgain Changes] Files synchronized to ${hostname}"

if [ -f ${logfile} ]; then
    LOCKFILE="/dev/shm/puppetmaster-sync-log"
    if ! lockfile -r 0 "${LOCKFILE}" >> ${logfile} 2>&1; then
        echo "${LOCKFILE} already exists; not running rsync" >> ${logfile}
        subject="[PuppetAgain Errors] Rsync already running on ${hostname}"
    else
        trap "rm -f ${LOCKFILE}; exit" SIGHUP SIGINT SIGTERM EXIT

        # -H preserves hardlinks, saving some space
        su - puppetsync -c "rsync -e 'ssh -i ${puppetsync_key}' -H -rlpt --delete --exclude=lost+found/ --out-format='%o %f %L' ${distinguished_master}:${data_root}/ ${data_root}/" >> ${logfile}
    fi 

    # if anything was logged..

    if [ -s ${logfile} ]; then
        # if we're interactive, show the results
        tty -s && cat ${logfile}

        # email it
        mail -s "${subject}" "${mailto}" < "${logfile}"
    fi

    rm ${logfile}
else
    echo "Cannot create log file for puppetsync on ${hostname}." | mail -s "[PuppetAgain Errors] puppetmaster-sync failed on ${hostname}" "${mailto}" 
fi
 
