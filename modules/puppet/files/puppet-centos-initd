#!/bin/bash
# puppet        Init script for running the puppet client daemon
#
# Author:       Duane Griffin <d.griffin@psenterprise.com>
#               David Lutterkort <dlutter@redhat.com>
#
# chkconfig: - 98 02
#
# description: Enables periodic system configuration checks through puppet.
# processname: puppet
# config: /etc/sysconfig/puppet

PATH=/usr/bin:/sbin:/bin:/usr/sbin
export PATH

# number of tries to make between attempts to run puppet
REBOOT_AFTER=10

RETVAL=0

# Source function library.
. /etc/rc.d/init.d/functions

PUPPETMASTERS=$(< /etc/puppet/puppetmasters.txt)

# note that --test implies --detailed-exitcodes, which we don't want
PUPPET_OPTIONS="--onetime --no-daemonize --logdest=console --logdest=syslog --color=false"

run_puppet() {
    puppet_server="$1"
    echo $"Running puppet agent against server '$puppet_server'"

    # check for 'err:' in the output; this catches errors even
    # when the puppet exit status is incorrect.
    # stderr redirection fixes a problem where grep would get a
    # broken pipe. not sure why the redirect fixes it.
    tmp=`mktemp`
    /usr/bin/puppet agent $PUPPET_OPTIONS --server ${puppet_server} &> $tmp
    RETVAL=$?
    if grep -q "^err:" $tmp
    then
        RETVAL=1
    fi

    rm $tmp
    return $RETVAL
}

start() {
    count=0
    success=false
    while ! $success
    do
        for puppetmaster in $PUPPETMASTERS; do
            # try running puppet, and sleep 60s if it fails
            if run_puppet $puppetmaster; then
                success=true
                break
            fi
            sleep 60
        done

        # If DHCP fails to get a (correct) IP address for this system, then we
        # would sit in this loop until help arrives, which can be a long time.
        # In theory, DHCP should block until it gets an address, but this is
        # not the case - see bug 636390.  So we bail out after REBOOT_AFTER
        # tries, in hopes we'll get better info from DHCP.
        count=$((count+1))
        if [ $count -gt $REBOOT_AFTER ]; then
            echo "maybe a reboot will help.."
            /sbin/reboot
        fi
    done
}

case "$1" in
  start)
    start
    ;;
  stop)
    exit 0 # sure, I stopped..
    ;;
  status)
    exit 0 # working just fine, thanks
    ;;
  *)
    echo $"Usage: $0 {start|stop|status}"
    exit 1
esac

exit $RETVAL
