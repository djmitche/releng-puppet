#!/bin/bash

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# common atboot code
<%= puppet_atboot_common %>

# Wait for the DNS service to start.  This *should* happen even if there's no network
# (we're waiting for launchd to run lookupd), but in case it doesn't we'll reboot after
# 600s of this.
wait_for_dns() {
    count=0
    while scutil --dns | grep 'No DNS configuration available'; do
        echo "..waiting for DNS"
        sleep 1

        count=$((count+1))
        if [ $count -gt 600 ]; then
            do_reboot
        fi
    done

    # And even then, sometimes DNS doesn't work yet!  We try looking up the puppet
    # masters, and if one succeeds, we call it good
    count=0
    while true; do
        for pm in $PUPPETMASTERS; do
            host $pm && return
        done

        echo "..apparently DNS is still down"
        sleep 1

        count=$((count+1))
        if [ $count -gt 600 ]; then
            do_reboot
        fi
    done
}

# The buildbot plist, if it's running on this host, will only try to start when
# SEMAPHORE exists.  This file must be in a directory where the builder user can
# delete it, but it shouldn't exist yet
SEMAPHORE_DIR="/var/tmp/semaphore"
SEMAPHORE="${SEMAPHORE_DIR}/run-buildbot"
mkdir -p "${SEMAPHORE_DIR}"
chmod 0777 "${SEMAPHORE_DIR}"
rm -rf "${SEMAPHORE}"

logger -ist run-puppet "Starting run-puppet.sh at "`date`
wait_for_dns
run_until_success

# Now touch SEMAPHORE to signal the builder user's launchd to start
# buildbot.  This is level-triggered, not edge-triggered, so it's OK if the
# touch below happens before the builder user is logged in.
touch "${SEMAPHORE}"
